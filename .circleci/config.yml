---
version: 2.1

parameters:
  rollback:
    type: boolean
    default: false

docker_auth: &docker_auth
    username: $DOCKERHUB_USERNAME
    password: $DOCKERHUB_PASSWORD

defaults: &defaults
  docker:
    - image: greenpeaceinternational/p4-builder:latest
      auth:
        <<: *docker_auth

orbs:
  slack: circleci/slack@3.4.2

job_environments:
  common_environment: &common_environment
    APP_HOSTPATH: training
    CONTAINER_PREFIX: planet4-training
    WP_DB_NAME_PREFIX: planet4-training_wordpress
  develop_environment: &develop_environment
    APP_ENVIRONMENT: development
    APP_HOSTNAME: www-dev.greenpeace.org
    CLOUDSQL_INSTANCE: p4-develop-k8s
    GOOGLE_PROJECT_ID: planet-4-151612
    GCLOUD_CLUSTER: p4-development
    HELM_NAMESPACE: develop
    HELM_RELEASE: planet4-training
    NEWRELIC_APPNAME: P4 training Development
    WP_DB_NAME: planet4-training_wordpress_develop
    WP_STATELESS_BUCKET: planet4-training-stateless-develop
job_definitions:
  visualtests_reference_steps: &visualtests_reference_steps
    docker:
      - image: greenpeaceinternational/planet4-backstop:latest
        auth:
          <<: *docker_auth
    working_directory: /src
    steps:
      - run: exit
      - run: ./mergescenarios.sh
      - run: mkdir /app/ -p
      - run: ./makehistory.sh
      - store_artifacts:
          path: /app/backstop_data
      - persist_to_workspace:
          root: /app
          paths:
            - backstop_data

  visualtests_compare_steps: &visualtests_compare_steps
    docker:
      - image: greenpeaceinternational/planet4-backstop:latest
        auth:
          <<: *docker_auth
    working_directory: /src
    parameters:
      notify:
        type: boolean
        default: false
    steps:
      - run: ./checkout.sh
      - run: ./mergescenarios.sh
      - run: mkdir /app/ -p
      - attach_workspace:
          at: /app
      - run: ./makecomparison.sh
      - store_artifacts:
          path: /app/backstop_data
      - when:
          condition: << parameters.notify >>
          steps:
            # Notify p4-activity-ci
            - slack/status:
                fail_only: true
                channel: C015MQGG3KQ
                webhook: ${SLACK_NRO_WEBHOOK}

  build_steps: &build_steps
    working_directory: ~/
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_cache:
          keys:
            - composer-v5-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
            - composer-v5-{{ .Branch }}-{{ .Revision }}
            - composer-v5-{{ .Branch }}
            - composer-v5
      - run: |
          exit  
          if [[ -d source/cache ]]; then ls -al source/cache; fi
      - run: activate-gcloud-account.sh
      - run: mkdir -p /tmp/workspace/var /tmp/workspace/src
      - run: echo "${CIRCLE_BUILD_NUM}" > /tmp/workspace/var/circle-build-num
      - run: make test
      - run: make rewrite
      - run: make checkout
      - run: make rewrite-app-repos
      - run: make copy
      - run: make bake
      - run: make persist
      - run: make build
      - run: make push
      - run:
          name: Notify failure
          when: on_fail
          command: TYPE="Build" notify-job-failure.sh
      - save_cache:
          key: composer-v5-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
          paths:
            - source/cache
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var
            - src

  test_steps: &test_steps
    working_directory: ~/project
    docker:
      - image: gcr.io/planet-4-151612/p4-codeception:build-12
      - name: selenium
        image: selenium/standalone-chrome-debug:3.141.59-oxygen
        auth:
          <<: *docker_auth
    steps:
      - checkout
      - run: if [ ! -d "tests" ] || [ ! "$(ls -A tests)" ]; then circleci-agent step halt; fi
      - run: dockerize -wait tcp://selenium:4444
      - run: codeceptionify.sh .
      - run: codecept run --xml=junit.xml --html
      - run:
          name: Copy test artifacts
          when: always
          command: |
            mkdir -p /tmp/artifacts
            cp -r codeception/_output/. /tmp/artifacts
      - store_test_results:
          path: /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts

  deploy_steps: &deploy_steps
    working_directory: ~/
    parameters:
      notify:
        type: boolean
        default: false
      is_prod:
        type: boolean
        default: false
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: activate-gcloud-account.sh
      - run: BUILD_TAG=build-$(cat /tmp/workspace/var/circle-build-num) make deploy
      - when:
          condition: << parameters.is_prod >>
          steps:
            - run:
                name: Initiate finish-staging (approve rollback but it won't really)
                command: |
                  url="https://circleci.com/api/v2/workflow/$CIRCLE_WORKFLOW_ID/job"

                  # Get workflow details
                  workflow=$(curl -s -u "${CIRCLE_TOKEN}": -X GET --header "Content-Type: application/json" "$url")
                  # Get approval job id
                  job_id=$(echo "$workflow" | jq -r '.items[] | select(.name=="rollback-staging") | .approval_request_id ')

                  echo "Finishing staging."
                  echo "Job ID: ${job_id}"
                  curl \
                    --header "Content-Type: application/json" \
                    -u "${CIRCLE_TOKEN}:" \
                    -X POST \
                    "https://circleci.com/api/v2/workflow/${CIRCLE_WORKFLOW_ID}/approve/${job_id}"
      - when:
          condition: << parameters.notify >>
          steps:
            # Notify p4-activity-ci
            - slack/status:
                channel: C015MQGG3KQ
                webhook: ${SLACK_NRO_WEBHOOK}

jobs:
  visualtests-reference-develop:
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *visualtests_reference_steps

  visualtests-compare-develop:
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *visualtests_compare_steps

  build-develop:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *build_steps

  test-develop:
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *test_steps

  deploy-develop:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *deploy_steps
  data-sync:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure
          command: |
            ${HOME}/scripts/activate-gcloud-account.sh
      - run: /home/circleci/sync_to_test_site.sh

workflow_definitions:
  on_develop_commit: &on_develop_commit
    context: org-global
    filters:
      branches:
        only: develop

workflows:
  develop:
    jobs:
      - visualtests-reference-develop:
          <<: *on_develop_commit
      - build-develop:
          <<: *on_develop_commit
      - deploy-develop:
          <<: *on_develop_commit
          requires:
            - build-develop
            - visualtests-reference-develop
      - test-develop:
          <<: *on_develop_commit
          requires:
            - deploy-develop
      - visualtests-compare-develop:
          <<: *on_develop_commit
          requires:
            - deploy-develop
      - data-sync:
          <<: *on_develop_commit
          requires:
            - deploy-develop
